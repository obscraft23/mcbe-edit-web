{
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "identifier": "minecraft:player",
      "materials": {
        "blend": "wither_boss_armor",
        "blend2": "entity_alphablend",
        //Vanilla
        "default": "entity_alphatest",
        "cape": "entity_alphatest",
        "animated": "player_animated",
        "spectator": "player_spectator"
      },
      "textures": {
        "mapbase": "textures/radar/mapbase",
        "marker": "textures/radar/marker",
        //Vanilla
        "default": "textures/entity/steve",
        "cape": "textures/entity/cape_invisible"
      },
      "geometry": {
        "mapbase": "geometry.mapbase",
        "marker0": "geometry.marker0",
        "marker1": "geometry.marker1",
        "marker2": "geometry.marker2",
        "marker3": "geometry.marker3",
        "marker4": "geometry.marker4",
        "marker5": "geometry.marker5",
        "marker6": "geometry.marker6",
        "marker7": "geometry.marker7",
        
        //Vanilla
        "default": "geometry.humanoid.custom",
        "cape": "geometry.cape"
      },
      "scripts": {
        "scale": "0.9375", //Vanilla
        "initialize": [
          //Vanilla
          "variable.is_holding_right = 0.0;",
          "variable.is_blinking = 0.0;",
          "variable.last_blink_time = 0.0;",
          "variable.hand_bob = 0.0;",

          //pack
          "variable.timer = -1;",
          "variable.recordtimer = -1;",
          "variable.recordsep = 200;",
          "variable.player_posx0 = 1000 + query.position(0);",
          "variable.player_posz0 = 1000 + query.position(2);",
          "variable.player_posx1 = 1000 + query.position(0);",
          "variable.player_posz1 = 1000 + query.position(2);",
          "variable.player_posx2 = 1000 + query.position(0);",
          "variable.player_posz2 = 1000 + query.position(2);",
          "variable.player_posx3 = 1000 + query.position(0);",
          "variable.player_posz3 = 1000 + query.position(2);",
          "variable.player_posx4 = 1000 + query.position(0);",
          "variable.player_posz4 = 1000 + query.position(2);",
          "variable.player_posx5 = 1000 + query.position(0);",
          "variable.player_posz5 = 1000 + query.position(2);",
          "variable.player_posx6 = 1000 + query.position(0);",
          "variable.player_posz6 = 1000 + query.position(2);",
          "variable.player_posx7 = 1000 + query.position(0);",
          "variable.player_posz7 = 1000 + query.position(2);"

        ],
        "pre_animation": [
          //Vanilla
          "variable.helmet_layer_visible = 1.0;",
          "variable.leg_layer_visible = 1.0;",
          "variable.boot_layer_visible = 1.0;",
          "variable.chest_layer_visible = 1.0;",
          "variable.tcos0 = (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;",
          "variable.first_person_rotation_factor = math.sin((1 - variable.attack_time) * 180.0);",
          "variable.hand_bob = query.life_time < 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground && query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;",
          "variable.map_angle = math.clamp(1 - variable.player_x_rotation / 45.1, 0.0, 1.0);",
          "variable.item_use_normalized = query.main_hand_item_use_duration / query.main_hand_item_max_duration;",
          "variable.health = math.round(query.health / query.max_health * 100);",

          //pack
          "variable.timer = math.mod((variable.timer + 1),8*variable.recordsep);",
          "variable.recordtimer = variable.timer;",

          "variable.player_posx0 = (variable.recordtimer == 0) ? query.position(0) : (variable.player_posx0);",
          "variable.player_posz0 = (variable.recordtimer == 0) ? query.position(2) : (variable.player_posz0);",
          "variable.dx0 = variable.player_posx0 -query.position(0);",
          "variable.dz0 = variable.player_posz0 -query.position(2);",

          "variable.player_posx1 = (variable.recordtimer == variable.recordsep) ? query.position(0) : (variable.player_posx1);",
          "variable.player_posz1 = (variable.recordtimer == variable.recordsep) ? query.position(2) : (variable.player_posz1);",
          "variable.dx1 = variable.player_posx1 -query.position(0);",
          "variable.dz1 = variable.player_posz1 -query.position(2);",

          "variable.player_posx2 = (variable.recordtimer == 2*variable.recordsep) ? query.position(0) : (variable.player_posx2);",
          "variable.player_posz2 = (variable.recordtimer == 2*variable.recordsep) ? query.position(2) : (variable.player_posz2);",
          "variable.dx2 = variable.player_posx2-query.position(0);",
          "variable.dz2 = variable.player_posz2 -query.position(2);",

          "variable.player_posx3 = (variable.recordtimer == 3*variable.recordsep) ? query.position(0) : (variable.player_posx3);",
          "variable.player_posz3 = (variable.recordtimer == 3*variable.recordsep) ? query.position(2) : (variable.player_posz3);",
          "variable.dx3 = variable.player_posx3 -query.position(0);",
          "variable.dz3 = variable.player_posz3 -query.position(2);",

          "variable.player_posx4 = (variable.recordtimer == 4*variable.recordsep) ? query.position(0) : (variable.player_posx4);",
          "variable.player_posz4 = (variable.recordtimer == 4*variable.recordsep) ? query.position(2) : (variable.player_posz4);",
          "variable.dx4 = variable.player_posx4 -query.position(0);",
          "variable.dz4 = variable.player_posz4 -query.position(2);",

          "variable.player_posx5 = (variable.recordtimer == 5*variable.recordsep) ? query.position(0) : (variable.player_posx5);",
          "variable.player_posz5 = (variable.recordtimer == 5*variable.recordsep) ? query.position(2) : (variable.player_posz5);",
          "variable.dx5 = variable.player_posx5 -query.position(0);",
          "variable.dz5 = variable.player_posz5 -query.position(2);",

          "variable.player_posx6 = (variable.recordtimer == 6*variable.recordsep) ? query.position(0) : (variable.player_posx6);",
          "variable.player_posz6 = (variable.recordtimer == 6*variable.recordsep) ? query.position(2) : (variable.player_posz6);",
          "variable.dx6 = variable.player_posx6-query.position(0);",
          "variable.dz6 = variable.player_posz6 -query.position(2);",

          "variable.player_posx7 = (variable.recordtimer == 7*variable.recordsep) ? query.position(0) : (variable.player_posx7);",
          "variable.player_posz7 = (variable.recordtimer == 7*variable.recordsep) ? query.position(2) : (variable.player_posz7);",
          "variable.dx7 = variable.player_posx7 -query.position(0);",
          "variable.dz7 = variable.player_posz7 -query.position(2);"

          /*
          "variable.player_posx0 = (variable.recordtimer == 0) ? query.position(0) : (variable.player_posx0);",
          "variable.player_posz0 = (variable.recordtimer == 0) ? query.position(2) : (variable.player_posz0);",
          "variable.dx0 = variable.player_posx0 -query.position(0);",
          "variable.dz0 = variable.player_posz0 -query.position(2);",

          "variable.player_posx0 = (variable.recordtimer == 0) ? query.position(0) : (variable.player_posx0);",
          "variable.player_posz0 = (variable.recordtimer == 0) ? query.position(2) : (variable.player_posz0);",
          "variable.dx0 = variable.player_posx0 -query.position(0);",
          "variable.dz0 = variable.player_posz0 -query.position(2);",

          "variable.player_posx0 = (variable.recordtimer == 0) ? query.position(0) : (variable.player_posx0);",
          "variable.player_posz0 = (variable.recordtimer == 0) ? query.position(2) : (variable.player_posz0);",
          "variable.dx0 = variable.player_posx0 -query.position(0);",
          "variable.dz0 = variable.player_posz0 -query.position(2);"
          */
        ],
        "animate": [
          "radar",
          //Vanilla
          "root"
        ]
      },
      "animations": {
        "radar": "animation.player.radar",
        //Vanilla
        "root": "controller.animation.player.root",
        "hudplayer": "controller.animation.player.hudplayer",
        "base_controller": "controller.animation.player.base",
        "humanoid_base_pose": "animation.humanoid.base_pose",
        "look_at_target": "controller.animation.humanoid.look_at_target",
        "look_at_target_ui": "animation.player.look_at_target.ui",
        "look_at_target_default": "animation.humanoid.look_at_target.default",
        "look_at_target_gliding": "animation.humanoid.look_at_target.gliding",
        "look_at_target_swimming": "animation.humanoid.look_at_target.swimming",
        "look_at_target_inverted": "animation.player.look_at_target.inverted",
        "cape": "animation.player.cape",
        "move.arms": "animation.player.move.arms",
        "move.legs": "animation.player.move.legs",
        "swimming": "animation.player.swim",
        "swimming.legs": "animation.player.swim.legs",
        "riding.arms": "animation.player.riding.arms",
        "riding.legs": "animation.player.riding.legs",
        "holding": "animation.player.holding",
        "holding_spyglass": "animation.humanoid.holding_spyglass",
        "brandish_spear": "animation.humanoid.brandish_spear",
        "charging": "animation.humanoid.charging",
        "attack.positions": "animation.player.attack.positions",
        "attack.rotations": "animation.player.attack.rotations",
        "sneaking": "animation.player.sneaking",
        "bob": "animation.player.bob",
        "damage_nearby_mobs": "animation.humanoid.damage_nearby_mobs",
        "bow_and_arrow": "animation.humanoid.bow_and_arrow",
        "use_item_progress": "animation.humanoid.use_item_progress",
        "skeleton_attack": "animation.skeleton.attack",
        "sleeping": "animation.player.sleeping",
        "first_person_base_pose": "animation.player.first_person.base_pose",
        "first_person_swap_item": "animation.player.first_person.swap_item",
        "first_person_attack_controller": "controller.animation.player.first_person_attack",
        "first_person_attack_rotation": "animation.player.first_person.attack_rotation",
        "first_person_vr_attack_rotation": "animation.player.first_person.vr_attack_rotation",
        "first_person_walk": "animation.player.first_person.walk",
        "first_person_map_controller": "controller.animation.player.first_person_map",
        "first_person_map_hold": "animation.player.first_person.map_hold",
        "first_person_map_hold_attack": "animation.player.first_person.map_hold_attack",
        "first_person_map_hold_off_hand": "animation.player.first_person.map_hold_off_hand",
        "first_person_map_hold_main_hand": "animation.player.first_person.map_hold_main_hand",
        "first_person_crossbow_equipped": "animation.player.first_person.crossbow_equipped",
        "third_person_crossbow_equipped": "animation.player.crossbow_equipped",
        "third_person_bow_equipped": "animation.player.bow_equipped",
        "first_person_shield_block": "animation.player.first_person.shield_block",
        "first_person_empty_hand": "animation.player.first_person.empty_hand",
        "tooting_goat_horn": "animation.humanoid.tooting_goat_horn",
        "crossbow_hold": "animation.player.crossbow_hold",
        "crossbow_controller": "controller.animation.player.crossbow",
        "shield_block_main_hand": "animation.player.shield_block_main_hand",
        "shield_block_off_hand": "animation.player.shield_block_off_hand",
        "blink": "controller.animation.persona.blink"
      },
      "render_controllers": [
        //Vanilla
        { "controller.render.player.first_person_spectator": "variable.is_first_person && query.is_spectator" },
        { "controller.render.player.third_person_spectator": "!variable.is_first_person && !variable.map_face_icon && query.is_spectator" },
        { "controller.render.player.first_person": "variable.is_first_person && !query.is_spectator" },
        { "controller.render.player.third_person": "!variable.is_first_person && !variable.map_face_icon && !query.is_spectator" },
        { "controller.render.player.map": "variable.map_face_icon" },
        //pack
        { "controller.render.mapbase": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker0": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker1": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker2": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker3": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker4": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker5": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker6": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" },
        { "controller.render.marker7": "query.is_alive && query.is_in_ui && query.is_gliding == 0 && query.is_riding == 0" }
      ],
      "enable_attachables": true
    }
  }
}
